{"version":3,"sources":["components/Navigation.jsx","ProfilePage/index.jsx","MainPage/index.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","nav","breakpoints","up","flex","order","down","Navigator","classes","history","useHistory","React","useState","value","setValue","className","Hidden","mdDown","List","ListItem","button","onClick","push","ListItemIcon","ListItemText","primary","lgUp","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","ProfilePage","root","backgroundColor","MainPage","app","height","main","display","flexDirection","content","flexGrow","minHeight","maxHeight","App","basename","process","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c7746af6.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Hidden from '@material-ui/core/Hidden';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n    nav: {\n        [theme.breakpoints.up('lg')]: {\n            flex: 1,\n            order: 1,\n            // backgroundColor: 'DARKKHAKI',\n        },\n        [theme.breakpoints.down('md')]: {\n            order: 0,\n            // backgroundColor: 'GOLDENROD',\n        },\n    },\n}));\n\nexport default function Navigator() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [value, setValue] = React.useState('recents');\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div className={classes.nav}>\n            <Hidden mdDown>\n                <List>\n                    <ListItem button onClick={() => history.push('/')}>\n                        <ListItemIcon>\n                            <HomeIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"home\" />\n                    </ListItem>\n                    <ListItem button onClick={() => history.push('/profile-page')}>\n                        <ListItemIcon>\n                            <AccountIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"profile\" />\n                    </ListItem>\n                </List>\n            </Hidden>\n            <Hidden lgUp>\n                <BottomNavigation value={value} onChange={handleChange}>\n                    <BottomNavigationAction\n                        onClick={() => history.push('/')}\n                        label=\"Home\"\n                        value=\"home\"\n                        icon={<HomeIcon />}\n                    />\n                    <BottomNavigationAction\n                        onClick={() => history.push('/profile-page')}\n                        label=\"Profile\"\n                        value=\"profile\"\n                        icon={<AccountIcon />}\n                    />\n                    <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n                    <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n                </BottomNavigation>\n            </Hidden>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function ProfilePage() {\n    return <div>Profile</div>;\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            backgroundColor: 'ORANGERED',\n        },\n        [theme.breakpoints.up('md')]: {\n            backgroundColor: 'DARKTURQUOISE',\n        },\n        [theme.breakpoints.up('lg')]: {\n            backgroundColor: 'OLIVEDRAB',\n        },\n    },\n}));\n\nexport default function MainPage() {\n    const classes = useStyles();\n    return <div className={classes.root}>MainPage</div>;\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from './components/Header';\nimport Navigation from './components/Navigation';\nimport ProfilePage from './ProfilePage';\nimport MainPage from './MainPage';\n\nconst useStyles = makeStyles((theme) => ({\n    app: {\n        height: '100vh',\n    },\n    main: {\n        display: 'flex',\n        [theme.breakpoints.up('lg')]: {\n            flexDirection: 'row',\n        },\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n        },\n    },\n    content: {\n        [theme.breakpoints.up('lg')]: {\n            flexGrow: 6,\n            order: 2,\n        },\n        [theme.breakpoints.down('md')]: {\n            minHeight: 'calc(100vh - 56px)',\n            maxHeight: 'calc(100vh - 56px)',\n            order: 0,\n        },\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <div className={classes.app}>\n            {/* <Header /> */}\n            <div className={classes.main}>\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    <div className={classes.content}>\n                        <Switch>\n                            <Route path=\"/\" exact component={MainPage} />\n                            <Route path=\"/profile-page\" component={ProfilePage} />\n                            <Route component={() => <div>404 Not found </div>} />\n                        </Switch>\n                    </div>\n                    <Navigation />\n                </BrowserRouter>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}