{"version":3,"sources":["components/Title/ArrowBackTitle.jsx","i18n.js","components/Header/index.jsx","components/Footer/index.jsx","components/Victory.jsx","views/DataPage/Plot.jsx","routes.jsx","components/Navigation.jsx","components/Main/index.jsx","App.js","serviceWorker.js","index.js"],"names":["ArrowBackTitle","props","title","navigation","useNavigation","className","onClick","goBack","variant","resources","translation","en","tw","cn","i18n","use","initReactI18next","init","lng","fallbackLng","interpolation","escapeValue","Header","Footer","href","Victory","VictoryCursorVoronoiContainer","createContainer","data","time","value","containerComponent","voronoiDimension","voronoiBlacklist","labels","datum","labelComponent","flyoutStyle","stroke","pointerLength","centerOffset","y","x","animate","duration","onLoad","name","useStyle","makeStyles","content","padding","Plot","id","classes","routes","mount","route","getView","req","params","view","Navigator","basename","t","useTranslation","React","useState","setValue","Hidden","mdDown","List","ListItem","button","navigate","ListItemIcon","ListItemText","primary","lgUp","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","Main","process","Grid","container","item","lg","xs","fallback","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11a9494f.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigation } from 'react-navi';\nimport Button from '@material-ui/core/Button';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Typography from '@material-ui/core/Typography';\n\nimport './styles.scss';\n\nexport default function ArrowBackTitle(props) {\n    const { title } = props;\n    const navigation = useNavigation();\n\n    return (\n        <div className=\"title\">\n            <Button className=\"button\" onClick={() => navigation.goBack()}>\n                <ArrowBack />\n            </Button>\n            <Typography className=\"label\" variant=\"h4\">{title}</Typography>\n        </div>\n    );\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from './assets/i18n/en.json';\nimport tw from './assets/i18n/zh-TW.json';\nimport cn from './assets/i18n/zh-CN.json';\n\n// ISO-639 - ISO-3166\nconst resources = {\n    'en': {\n        translation: en,\n    },\n    'zh-TW': {\n        translation: tw,\n    },\n    'zh-CN': {\n        translation: cn,\n    },\n};\n\ni18n.use(initReactI18next).init({\n    resources,\n    lng: 'zh-TW', // default language\n    fallbackLng: 'en', // use this language if there is no translation in selected language\n    interpolation: {\n        escapeValue: false,\n    },\n});\n\nexport default i18n;\n","import React from 'react';\n\nimport './styles.scss';\n\nexport default function Header() {\n    return (\n        <header className=\"header\">\n            <h1>Header</h1>\n        </header>\n    );\n}\n","import React from 'react';\n\nimport './styles.scss';\n\nexport default function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"copyright\">\n                &copy; Untitled. All rights reserved. Demo Images: <a href=\"https://unsplash.com\">Unsplash</a>. Design:\n                Joseph.\n            </p>\n        </footer>\n    );\n}\n","import React from 'react';\nimport { VictoryChart, VictoryLine, VictoryScatter, createContainer, VictoryTooltip } from 'victory';\n\nexport default function Victory() {\n    const VictoryCursorVoronoiContainer = createContainer('cursor', 'voronoi'); //combine VictoryCursorContainer and VictoryVoronoiContainer\n\n    const data = [\n        { time: 8918400, value: 11926.69 },\n        { time: 9004800, value: 11397.9 },\n        { time: 9091200, value: 10174.62 },\n        { time: 9177600, value: 10467.33 },\n        { time: 9264000, value: 10167.97 },\n        { time: 9350400, value: 10260.37 },\n        { time: 9436800, value: 10379.08 },\n        { time: 9523200, value: 10128.54 },\n        { time: 9609600, value: 10228.85 },\n        { time: 9696000, value: 10345.68 },\n        { time: 9782400, value: 10319.28 },\n    ];\n    return (\n        <VictoryChart\n            containerComponent={\n                <VictoryCursorVoronoiContainer\n                    voronoiDimension={'x'}\n                    voronoiBlacklist={['scatter']}\n                    labels={({ datum }) => `${datum.value}`}\n                    labelComponent={\n                        <VictoryTooltip flyoutStyle={{ stroke: 'none' }} pointerLength={0} centerOffset={{ y: -10 }} />\n                    }\n                />\n            }\n        >\n            <VictoryLine\n                data={data}\n                x=\"time\"\n                y=\"value\"\n                animate={{\n                    duration: 2000,\n                    onLoad: { duration: 1000 },\n                }}\n            />\n            <VictoryScatter name=\"scatter\" data={data} x=\"time\" y=\"value\" />\n        </VictoryChart>\n    );\n}\n","import React from 'react';\n\nimport ArrowBackTitle from '../../components/Title/ArrowBackTitle';\nimport Victory from '../../components/Victory';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport './styles.scss';\n\nconst useStyle = makeStyles(() => ({\n    content: {\n        padding: '10px 0',\n    },\n}));\n\nexport default function Plot({ id }) {\n    const classes = useStyle();\n    return (\n        <div className=\"ui container\">\n            <ArrowBackTitle title={id} />\n            <div className={classes.content}>\n                <Victory />\n            </div>\n        </div>\n    );\n}\n","import { mount, route } from 'navi';\nimport React from 'react';\n\nimport Plot from './views/DataPage/Plot';\n\nconst appName = 'PWA';\n\nconst routes = mount({\n    '/': route({\n        title: `Home - ${appName}`,\n        getView: () =>\n            import(\n                /*webpackChunkName: \"MainPage\"*/\n                './views/MainPage'\n            ),\n    }),\n    '/data': mount({\n        '/': route({\n            title: `Data - ${appName}`,\n            getView: () =>\n                import(\n                    /*webpackChunkName: \"DataPage\"*/\n                    './views/DataPage'\n                ),\n        }),\n        '/:id': route((req) => {\n            let id = req.params.id;\n            return {\n                view: <Plot id={id} />,\n            };\n        }),\n    }),\n    '/assistant': route({\n        title: `Assistant - ${appName}`,\n        getView: () =>\n            import(\n                /*webpackChunkName: \"AssistantPage\"*/\n                './views/AssistantPage'\n            ),\n    }),\n    '/profile': mount({\n        '/': route({\n            title: `Profile - ${appName}`,\n            getView: () =>\n                import(\n                    /*webpackChunkName: \"ProfilePage\"*/\n                    './views/ProfilePage'\n                ),\n        }),\n        '/basic': route({\n            title: `Profile/Basic Message - ${appName}`,\n            getView: () => import('./views/ProfilePage/BasicMessage'),\n        }),\n        '/upload': route({\n            title: `Profile/Upload KYC - ${appName}`,\n            getView: () => import('./views/ProfilePage/UploadKYC'),\n        }),\n        '/doc': route({\n            title: `Profile/Documents - ${appName}`,\n            getView: () => import('./views/ProfilePage/Documents'),\n        }),\n        '/about': route({\n            title: `Profile/About Us - ${appName}`,\n            getView: () => import('./views/ProfilePage/About'),\n        }),\n        '/language': route({\n            title: `Profile/Language - ${appName}`,\n            getView: () => import('./views/ProfilePage/Language'),\n        }),\n    }),\n});\n\nexport default routes;\n","import React from 'react';\nimport { useNavigation } from 'react-navi';\nimport { useTranslation } from 'react-i18next';\n\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Hidden from '@material-ui/core/Hidden';\nimport AssistantIcon from '@material-ui/icons/Assistant';\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\n\nexport default function Navigator({ basename }) {\n    const navigation = useNavigation();\n    const { t } = useTranslation();\n    const [value, setValue] = React.useState('home');\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <nav>\n            <Hidden mdDown>\n                <List>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/`);\n                            setValue('home');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <HomeIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('navigation.home')} />\n                    </ListItem>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/data`);\n                            setValue('data');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <DataUsageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('navigation.data')} />\n                    </ListItem>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/assistant`);\n                            setValue('assistant');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <AssistantIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('navigation.assistant')} />\n                    </ListItem>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/profile`);\n                            setValue('profile');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <AccountIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('navigation.profile')} />\n                    </ListItem>\n                </List>\n            </Hidden>\n            <Hidden lgUp>\n                <BottomNavigation value={value} onChange={handleChange}>\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/`)}\n                        label={t('navigation.home')}\n                        value=\"home\"\n                        icon={<HomeIcon />}\n                    />\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/data`)}\n                        label={t('navigation.data')}\n                        value=\"data\"\n                        icon={<DataUsageIcon />}\n                    />\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/assistant`)}\n                        label={t('navigation.assistant')}\n                        value=\"assistant\"\n                        icon={<AssistantIcon />}\n                    />\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/profile`)}\n                        label={t('navigation.profile')}\n                        value=\"profile\"\n                        icon={<AccountIcon />}\n                    />\n                </BottomNavigation>\n            </Hidden>\n        </nav>\n    );\n}\n","import React, { Suspense } from 'react';\nimport { Router, View } from 'react-navi';\nimport Grid from '@material-ui/core/Grid';\nimport HelmetProvider from 'react-navi-helmet-async';\nimport routes from '../../routes';\nimport Navigation from '../Navigation';\n\nimport './styles.scss';\n\nconst basename = process.env.PUBLIC_URL;\n\nexport default function Main() {\n    return (\n        <div className=\"main\">\n            <HelmetProvider>\n                <Router routes={routes} basename={basename}>\n                    <Grid container>\n                        <Grid className=\"nav\" item lg={2} xs={12}>\n                            <Navigation basename={basename} />\n                        </Grid>\n                        <Grid className=\"content\" item lg={10} xs={12}>\n                            <Suspense fallback={null}>\n                                <View />\n                            </Suspense>\n                        </Grid>\n                    </Grid>\n                </Router>\n            </HelmetProvider>\n        </div>\n    );\n}\n","import React from 'react';\nimport './i18n';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\n\nimport './App.scss';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Header />\n            <Main />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}