{"version":3,"sources":["components/Title/ArrowBackTitle.jsx","components/TextField/PasswordInput.jsx","components/TextField/TextInput.jsx","components/TextField/index.jsx","views/ProfilePage/BasicMessage.jsx"],"names":["useStyles","makeStyles","theme","titleContainer","display","position","breakpoints","up","flexDirection","down","alignItems","button","left","ArrowBackTitle","props","title","classes","navigation","useNavigation","className","onClick","goBack","variant","PasswordInput","label","useState","password","setPassword","showPassword","setShowPassword","inputProps","endAdornment","InputAdornment","IconButton","TextField","fullWidth","InputProps","InputLabelProps","shrink","type","onChange","event","target","value","TextInput","setValue","useStyle","textFieldContainer","margin","textField","contentContainer","BasicMessage","severity","text","map","index","key","color"],"mappings":"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","file":"static/js/5.ae978e6c.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigation } from 'react-navi';\nimport Button from '@material-ui/core/Button';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n        display: 'flex',\n        position: 'relative',\n        [theme.breakpoints.up('lg')]: {\n            flexDirection: 'left',\n        },\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n    },\n    button: {\n        [theme.breakpoints.down('md')]: {\n            position: 'absolute',\n            left: '0',\n        },\n    },\n}));\n\nexport default function ArrowBackTitle(props) {\n    const { title } = props;\n    const classes = useStyles();\n    const navigation = useNavigation();\n\n    return (\n        <div className={classes.titleContainer}>\n            <Button className={classes.button} onClick={() => navigation.goBack()}>\n                <ArrowBack />\n            </Button>\n            <Typography variant=\"h4\">{title}</Typography>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nfunction PasswordInput({ className, label }) {\n    const [password, setPassword] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n\n    const onIconClicked = () => {\n        setShowPassword(!showPassword);\n    };\n    const onValueChanged = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const labelProps = {\n        shrink: true,\n    };\n    const inputProps = {\n        endAdornment: (\n            <InputAdornment>\n                <IconButton onClick={onIconClicked}>\n                    {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                </IconButton>\n            </InputAdornment>\n        ),\n    };\n    \n    return (\n        <TextField\n            className={className}\n            fullWidth\n            InputProps={inputProps}\n            variant=\"outlined\"\n            InputLabelProps={labelProps}\n            type={showPassword ? 'text' : 'password'}\n            label={label}\n            onChange={onValueChanged}\n            value={password}\n        />\n    );\n}\n\nexport default PasswordInput;\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextInput({ className, label, type }) {\n    const [value, setValue] = useState('');\n\n    const onValueChanged = (event) => {\n        setValue(event.target.value);\n    };\n\n    const labelProps = {\n        shrink: true,\n    };\n    return (\n        <TextField\n            className={className}\n            fullWidth\n            variant=\"outlined\"\n            InputLabelProps={labelProps}\n            label={label}\n            type={type}\n            onChange={onValueChanged}\n            value={value}\n        />\n    );\n}\n\nexport default TextInput;\n","import React from 'react';\nimport PasswordInput from './PasswordInput';\nimport TextInput from './TextInput';\n\nexport default function TextField({ className, label, type }) {\n    switch (type) {\n        case 'password':\n            return <PasswordInput className={className} label={label} />;\n        default:\n            return <TextInput className={className} label={label} type={type} />;\n    }\n}\n","import React from 'react';\n\nimport TextField from '../../components/TextField';\nimport ArrowBackTitle from '../../components/Title/ArrowBackTitle';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyle = makeStyles(() => ({\n    textFieldContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '1em 0',\n    },\n    textField: {\n        margin: '0.5em 0',\n    },\n    contentContainer: {\n        margin: '1em',\n    },\n}));\n\nexport default function BasicMessage() {\n    const classes = useStyle();\n    const renderTextFields = () => {\n        const labels = [\n            { text: 'E-mail', type: 'text' },\n            { text: 'First name', type: 'text' },\n            { text: 'Last name', type: 'text' },\n            { text: 'Address', type: 'text' },\n            { text: 'Postal', type: 'text' },\n            { text: 'County', type: 'text' },\n            { text: 'City', type: 'text' },\n            { text: 'Country', type: 'text' },\n            { text: 'Phone', type: 'text' },\n            { text: 'Birthday', type: 'date' },\n        ];\n        return labels.map((label, index) => (\n            <TextField className={classes.textField} label={label.text} type={label.type} key={index} />\n        ));\n    };\n\n    return (\n        <div>\n            <ArrowBackTitle title=\"Basic Message\" />\n            <div>\n                <Divider />\n            </div>\n            <div className={classes.contentContainer}>\n                <Alert variant=\"outlined\" severity=\"warning\">\n                    <AlertTitle>Warning</AlertTitle>\n                    Once KYC is certified, you <strong>can not</strong> modify information like name or address by\n                    yourself\n                </Alert>\n                <div className={classes.textFieldContainer}>{renderTextFields()}</div>\n                <Button variant=\"contained\" color=\"primary\">\n                    Submit\n                </Button>\n            </div>\n        </div>\n    );\n}\n"],"sourceRoot":""}