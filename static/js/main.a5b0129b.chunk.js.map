{"version":3,"sources":["components/Title/ArrowBackTitle.jsx","components/Victory.jsx","views/DataPage/Plot.jsx","routes.jsx","components/Header.jsx","components/Footer.jsx","components/Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","titleContainer","display","position","breakpoints","up","flexDirection","down","alignItems","button","left","ArrowBackTitle","props","title","classes","navigation","useNavigation","className","onClick","goBack","variant","Victory","VictoryCursorVoronoiContainer","createContainer","data","time","value","containerComponent","voronoiDimension","voronoiBlacklist","labels","datum","labelComponent","flyoutStyle","stroke","pointerLength","centerOffset","y","x","animate","duration","onLoad","name","useStyle","content","padding","Plot","id","Divider","routes","mount","route","getView","req","params","view","Header","style","backgroundColor","Footer","Navigator","basename","React","useState","setValue","Hidden","mdDown","List","ListItem","navigate","ListItemIcon","ListItemText","primary","lgUp","BottomNavigation","onChange","event","newValue","BottomNavigationAction","label","icon","app","minHeight","marginBottom","paddingBottom","header","maxHeight","footer","bottom","width","zIndex","main","height","overflowX","flexGrow","order","overflow","nav","flex","App","process","Grid","container","item","lg","xs","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5b0129b.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigation } from 'react-navi';\nimport Button from '@material-ui/core/Button';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n        display: 'flex',\n        position: 'relative',\n        [theme.breakpoints.up('lg')]: {\n            flexDirection: 'left',\n        },\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n    },\n    button: {\n        [theme.breakpoints.down('md')]: {\n            position: 'absolute',\n            left: '0',\n        },\n    },\n}));\n\nexport default function ArrowBackTitle(props) {\n    const { title } = props;\n    const classes = useStyles();\n    const navigation = useNavigation();\n\n    return (\n        <div className={classes.titleContainer}>\n            <Button className={classes.button} onClick={() => navigation.goBack()}>\n                <ArrowBack />\n            </Button>\n            <Typography variant=\"h4\">{title}</Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { VictoryChart, VictoryLine, VictoryScatter, createContainer, VictoryTooltip } from 'victory';\n\nexport default function Victory() {\n    const VictoryCursorVoronoiContainer = createContainer('cursor', 'voronoi'); //combine VictoryCursorContainer and VictoryVoronoiContainer\n\n    const data = [\n        { time: 8918400, value: 11926.69 },\n        { time: 9004800, value: 11397.9 },\n        { time: 9091200, value: 10174.62 },\n        { time: 9177600, value: 10467.33 },\n        { time: 9264000, value: 10167.97 },\n        { time: 9350400, value: 10260.37 },\n        { time: 9436800, value: 10379.08 },\n        { time: 9523200, value: 10128.54 },\n        { time: 9609600, value: 10228.85 },\n        { time: 9696000, value: 10345.68 },\n        { time: 9782400, value: 10319.28 },\n    ];\n    return (\n        <VictoryChart\n            containerComponent={\n                <VictoryCursorVoronoiContainer\n                    voronoiDimension={'x'}\n                    voronoiBlacklist={['scatter']}\n                    labels={({ datum }) => `${datum.value}`}\n                    labelComponent={\n                        <VictoryTooltip flyoutStyle={{ stroke: 'none' }} pointerLength={0} centerOffset={{ y: -10 }} />\n                    }\n                />\n            }\n        >\n            <VictoryLine\n                data={data}\n                x=\"time\"\n                y=\"value\"\n                animate={{\n                    duration: 2000,\n                    onLoad: { duration: 1000 },\n                }}\n            />\n            <VictoryScatter name=\"scatter\" data={data} x=\"time\" y=\"value\" />\n        </VictoryChart>\n    );\n}\n","import React from 'react';\n\nimport ArrowBackTitle from '../../components/Title/ArrowBackTitle';\nimport Victory from '../../components/Victory';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyle = makeStyles(() => ({\n    content: {\n        padding: '10px 0',\n    },\n}));\n\nexport default function Plot({ id }) {\n    const classes = useStyle();\n    return (\n        <div>\n            <ArrowBackTitle title={id} />\n            <Divider />\n            <div className=\"ui container\">\n                <div className={classes.content}>\n                    <Victory />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { mount, route } from 'navi';\nimport React from 'react';\n\nimport Plot from './views/DataPage/Plot';\n\nconst appName = 'PWA';\n\nconst routes = mount({\n    '/': route({\n        title: `Home - ${appName}`,\n        getView: () => import('./views/MainPage'),\n    }),\n    '/data': mount({\n        '/': route({\n            title: `Data - ${appName}`,\n            getView: () => import('./views/DataPage'),\n        }),\n        '/:id': route((req) => {\n            let id = req.params.id;\n            return {\n                view: <Plot id={id} />,\n            };\n        }),\n    }),\n    '/assistant': route({\n        title: `Assistant - ${appName}`,\n        getView: () => import('./views/AssistantPage'),\n    }),\n    '/profile': mount({\n        '/': route({\n            title: `Profile - ${appName}`,\n            getView: () => import('./views/ProfilePage'),\n        }),\n        '/basic': route({\n            title: `Profile/Basic Message - ${appName}`,\n            getView: () => import('./views/ProfilePage/BasicMessage'),\n        }),\n        '/upload': route({\n            title: `Profile/Upload KYC - ${appName}`,\n            getView: () => import('./views/ProfilePage/UploadKYC'),\n        }),\n        '/doc': route({\n            title: `Profile/Documents - ${appName}`,\n            getView: () => import('./views/ProfilePage/Documents'),\n        }),\n        '/about': route({\n            title: `Profile/About Us - ${appName}`,\n            getView: () => import('./views/ProfilePage/About'),\n        }),\n    }),\n});\n\nexport default routes;\n","import React from 'react';\n\nexport default function Header() {\n    return (\n        <div className=\"Header\" style={{ backgroundColor: 'CORNSILK' }}>\n            <h1>Header</h1>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <div className=\"footer\" style={{ backgroundColor: 'CORNSILK' }}>\n            <h1>Footer</h1>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useNavigation } from 'react-navi';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Hidden from '@material-ui/core/Hidden';\nimport AssistantIcon from '@material-ui/icons/Assistant';\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountIcon from '@material-ui/icons/AccountCircle';\n\nexport default function Navigator({ basename }) {\n    const navigation = useNavigation();\n    const [value, setValue] = React.useState('recents');\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <div>\n            <Hidden mdDown>\n                <List>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/`);\n                            setValue('home');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <HomeIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"home\" />\n                    </ListItem>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/data`);\n                            setValue('data');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <DataUsageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Data\" />\n                    </ListItem>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/assistant`);\n                            setValue('assistant');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <AssistantIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Assistant\" />\n                    </ListItem>\n                    <ListItem\n                        button\n                        onClick={() => {\n                            navigation.navigate(`${basename}/profile`);\n                            setValue('profile');\n                        }}\n                    >\n                        <ListItemIcon>\n                            <AccountIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"profile\" />\n                    </ListItem>\n                </List>\n            </Hidden>\n            <Hidden lgUp>\n                <BottomNavigation value={value} onChange={handleChange}>\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/`)}\n                        label=\"Home\"\n                        value=\"home\"\n                        icon={<HomeIcon />}\n                    />\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/data`)}\n                        label=\"Data\"\n                        value=\"data\"\n                        icon={<DataUsageIcon />}\n                    />\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/assistant`)}\n                        label=\"Assistant\"\n                        value=\"assistant\"\n                        icon={<AssistantIcon />}\n                    />\n                    <BottomNavigationAction\n                        onClick={() => navigation.navigate(`${basename}/profile`)}\n                        label=\"Profile\"\n                        value=\"profile\"\n                        icon={<AccountIcon />}\n                    />\n                </BottomNavigation>\n            </Hidden>\n        </div>\n    );\n}\n","import React, { Suspense } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Router, View } from 'react-navi';\nimport Grid from '@material-ui/core/Grid';\nimport HelmetProvider from 'react-navi-helmet-async';\n\nimport routes from './routes';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Navigation from './components/Navigation';\n\nconst useStyles = makeStyles((theme) => ({\n    app: {\n        display: 'flex',\n        position: 'relative',\n        flexDirection: 'column',\n        [theme.breakpoints.down('md')]: {\n            minHeight: 'calc(100vh - 4em)', // minus nav height\n            marginBottom: '4em', // nav height\n            paddingBottom: '3em', // footer height\n        },\n    },\n    header: {\n        maxHeight: '7vh',\n        minHeight: '7vh',\n    },\n    footer: {\n        maxHeight: '7vh',\n        minHeight: '7vh',\n        [theme.breakpoints.down('md')]: {\n            position: 'absolute',\n            bottom: '0',\n            width: '100vw',\n            zIndex: '-1',\n        },\n    },\n    main: {\n        display: 'flex',\n        [theme.breakpoints.up('lg')]: {\n            flexDirection: 'row',\n            minHeight: '86vh',\n            maxHeight: '86vh',\n        },\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n        },\n    },\n    content: {\n        height: '100%',\n        [theme.breakpoints.up('lg')]: {\n            overflowX: 'hidden',\n            flexGrow: 6,\n            order: 2,\n        },\n        [theme.breakpoints.down('md')]: {\n            overflow: 'hidden',\n            order: 0,\n        },\n    },\n    nav: {\n        [theme.breakpoints.up('lg')]: {\n            height: '100%',\n            flex: 1,\n            order: 1,\n            // backgroundColor: 'DARKKHAKI',\n        },\n        [theme.breakpoints.down('md')]: {\n            position: 'fixed',\n            bottom: 0,\n            width: '100vw',\n            zIndex: 100,\n            // backgroundColor: 'GOLDENROD',\n        },\n    },\n}));\n\nconst basename = process.env.PUBLIC_URL;\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <div className={classes.app}>\n            <div className={classes.header}>\n                <Header />\n            </div>\n            <div className={classes.main}>\n                <HelmetProvider>\n                    <Router routes={routes} basename={basename}>\n                        <Grid container>\n                            <Grid className={classes.nav} item lg={2} xs={12}>\n                                <Navigation basename={basename} />\n                            </Grid>\n                            <Grid className={classes.content} item lg={10} xs={12}>\n                                <Suspense fallback={null}>\n                                    <View />\n                                </Suspense>\n                            </Grid>\n                        </Grid>\n                    </Router>\n                </HelmetProvider>\n            </div>\n            <div className={classes.footer}>\n                <Footer />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}