{"version":3,"sources":["components/TextField/PasswordInput.jsx","components/TextField/TextInput.jsx","components/TextField/index.jsx","views/ProfilePage/BasicMessage.jsx"],"names":["PasswordInput","className","label","useState","password","setPassword","showPassword","setShowPassword","inputProps","endAdornment","InputAdornment","IconButton","onClick","TextField","fullWidth","InputProps","variant","InputLabelProps","shrink","type","onChange","event","target","value","TextInput","setValue","useStyle","makeStyles","textFieldContainer","display","flexDirection","alignItems","margin","textField","contentContainer","BasicMessage","classes","title","severity","text","map","index","key","color"],"mappings":"0NA8CeA,MAvCf,YAA8C,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MAAS,EACTC,mBAAS,IADA,mBAClCC,EADkC,KACxBC,EADwB,OAEDF,oBAAS,GAFR,mBAElCG,EAFkC,KAEpBC,EAFoB,KAcnCC,EAAa,CACfC,aACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAbF,WAClBL,GAAiBD,KAaJA,EAAe,kBAAC,IAAD,MAAqB,kBAAC,IAAD,SAMrD,OACI,kBAACO,EAAA,EAAD,CACIZ,UAAWA,EACXa,WAAS,EACTC,WAAYP,EACZQ,QAAQ,WACRC,gBAnBW,CACfC,QAAQ,GAmBJC,KAAMb,EAAe,OAAS,WAC9BJ,MAAOA,EACPkB,SA1Be,SAACC,GACpBhB,EAAYgB,EAAMC,OAAOC,QA0BrBA,MAAOnB,KCdJoB,MAxBf,YAAgD,IAA3BvB,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,MAAOiB,EAAQ,EAARA,KAAQ,EACjBhB,mBAAS,IADQ,mBACpCoB,EADoC,KAC7BE,EAD6B,KAU3C,OACI,kBAACZ,EAAA,EAAD,CACIZ,UAAWA,EACXa,WAAS,EACTE,QAAQ,WACRC,gBARW,CACfC,QAAQ,GAQJhB,MAAOA,EACPiB,KAAMA,EACNC,SAfe,SAACC,GACpBI,EAASJ,EAAMC,OAAOC,QAelBA,MAAOA,KClBJ,SAASV,EAAT,GAAgD,IAA3BZ,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,MAAOiB,EAAQ,EAARA,KAClD,OAAQA,GACJ,IAAK,WACD,OAAO,kBAAC,EAAD,CAAelB,UAAWA,EAAWC,MAAOA,IACvD,QACI,OAAO,kBAAC,EAAD,CAAWD,UAAWA,EAAWC,MAAOA,EAAOiB,KAAMA,O,iCCTxE,kIAUMO,EAAWC,aAAW,iBAAO,CAC/BC,mBAAoB,CAChBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,OAAQ,SAEZC,UAAW,CACPD,OAAQ,WAEZE,iBAAkB,CACdF,OAAQ,WAID,SAASG,IACpB,IAAMC,EAAUV,IAmBhB,OACI,6BACI,kBAAC,IAAD,CAAgBW,MAAM,kBACtB,6BACI,kBAAC,IAAD,OAEJ,yBAAKpC,UAAWmC,EAAQF,kBACpB,kBAAC,IAAD,CAAOlB,QAAQ,WAAWsB,SAAS,WAC/B,kBAAC,IAAD,gBADJ,8BAE+B,2CAF/B,wDAKA,yBAAKrC,UAAWmC,EAAQR,oBA7BjB,CACX,CAAEW,KAAM,SAAUpB,KAAM,QACxB,CAAEoB,KAAM,aAAcpB,KAAM,QAC5B,CAAEoB,KAAM,YAAapB,KAAM,QAC3B,CAAEoB,KAAM,UAAWpB,KAAM,QACzB,CAAEoB,KAAM,SAAUpB,KAAM,QACxB,CAAEoB,KAAM,SAAUpB,KAAM,QACxB,CAAEoB,KAAM,OAAQpB,KAAM,QACtB,CAAEoB,KAAM,UAAWpB,KAAM,QACzB,CAAEoB,KAAM,QAASpB,KAAM,QACvB,CAAEoB,KAAM,WAAYpB,KAAM,SAEhBqB,KAAI,SAACtC,EAAOuC,GAAR,OACd,kBAAC,IAAD,CAAWxC,UAAWmC,EAAQH,UAAW/B,MAAOA,EAAMqC,KAAMpB,KAAMjB,EAAMiB,KAAMuB,IAAKD,QAiB/E,kBAAC,IAAD,CAAQzB,QAAQ,YAAY2B,MAAM,WAAlC","file":"static/js/9.751c6ba6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nfunction PasswordInput({ className, label }) {\n    const [password, setPassword] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n\n    const onIconClicked = () => {\n        setShowPassword(!showPassword);\n    };\n    const onValueChanged = (event) => {\n        setPassword(event.target.value);\n    };\n\n    const labelProps = {\n        shrink: true,\n    };\n    const inputProps = {\n        endAdornment: (\n            <InputAdornment>\n                <IconButton onClick={onIconClicked}>\n                    {showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                </IconButton>\n            </InputAdornment>\n        ),\n    };\n    \n    return (\n        <TextField\n            className={className}\n            fullWidth\n            InputProps={inputProps}\n            variant=\"outlined\"\n            InputLabelProps={labelProps}\n            type={showPassword ? 'text' : 'password'}\n            label={label}\n            onChange={onValueChanged}\n            value={password}\n        />\n    );\n}\n\nexport default PasswordInput;\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextInput({ className, label, type }) {\n    const [value, setValue] = useState('');\n\n    const onValueChanged = (event) => {\n        setValue(event.target.value);\n    };\n\n    const labelProps = {\n        shrink: true,\n    };\n    return (\n        <TextField\n            className={className}\n            fullWidth\n            variant=\"outlined\"\n            InputLabelProps={labelProps}\n            label={label}\n            type={type}\n            onChange={onValueChanged}\n            value={value}\n        />\n    );\n}\n\nexport default TextInput;\n","import React from 'react';\nimport PasswordInput from './PasswordInput';\nimport TextInput from './TextInput';\n\nexport default function TextField({ className, label, type }) {\n    switch (type) {\n        case 'password':\n            return <PasswordInput className={className} label={label} />;\n        default:\n            return <TextInput className={className} label={label} type={type} />;\n    }\n}\n","import React from 'react';\n\nimport TextField from '../../components/TextField';\nimport ArrowBackTitle from '../../components/Title/ArrowBackTitle';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyle = makeStyles(() => ({\n    textFieldContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        margin: '1em 0',\n    },\n    textField: {\n        margin: '0.5em 0',\n    },\n    contentContainer: {\n        margin: '1em',\n    },\n}));\n\nexport default function BasicMessage() {\n    const classes = useStyle();\n    const renderTextFields = () => {\n        const labels = [\n            { text: 'E-mail', type: 'text' },\n            { text: 'First name', type: 'text' },\n            { text: 'Last name', type: 'text' },\n            { text: 'Address', type: 'text' },\n            { text: 'Postal', type: 'text' },\n            { text: 'County', type: 'text' },\n            { text: 'City', type: 'text' },\n            { text: 'Country', type: 'text' },\n            { text: 'Phone', type: 'text' },\n            { text: 'Birthday', type: 'date' },\n        ];\n        return labels.map((label, index) => (\n            <TextField className={classes.textField} label={label.text} type={label.type} key={index} />\n        ));\n    };\n\n    return (\n        <div>\n            <ArrowBackTitle title=\"Basic Message\" />\n            <div>\n                <Divider />\n            </div>\n            <div className={classes.contentContainer}>\n                <Alert variant=\"outlined\" severity=\"warning\">\n                    <AlertTitle>Warning</AlertTitle>\n                    Once KYC is certified, you <strong>can not</strong> modify information like name or address by\n                    yourself\n                </Alert>\n                <div className={classes.textFieldContainer}>{renderTextFields()}</div>\n                <Button variant=\"contained\" color=\"primary\">\n                    Submit\n                </Button>\n            </div>\n        </div>\n    );\n}\n"],"sourceRoot":""}