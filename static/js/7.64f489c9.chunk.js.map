{"version":3,"sources":["components/Title/ArrowBackTitle.jsx","../node_modules/@material-ui/icons/ArrowBack.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","views/ProfilePage/About.jsx"],"names":["useStyles","makeStyles","theme","titleContainer","display","position","breakpoints","up","flexDirection","down","alignItems","button","left","ArrowBackTitle","props","title","classes","navigation","useNavigation","className","onClick","goBack","variant","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","CardHeader","React","ref","action","avatar","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutProperties","type","Typography","_extends","color","clsx","root","content","withStyles","padding","flex","marginRight","alignSelf","marginTop","name","CardsContainer","TermDoc","Divider","Card","CardContent"],"mappings":"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","file":"static/js/7.64f489c9.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigation } from 'react-navi';\nimport Button from '@material-ui/core/Button';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n        display: 'flex',\n        position: 'relative',\n        [theme.breakpoints.up('lg')]: {\n            flexDirection: 'left',\n        },\n        [theme.breakpoints.down('md')]: {\n            flexDirection: 'column',\n            alignItems: 'center',\n        },\n    },\n    button: {\n        [theme.breakpoints.down('md')]: {\n            position: 'absolute',\n            left: '0',\n        },\n    },\n}));\n\nexport default function ArrowBackTitle(props) {\n    const { title } = props;\n    const classes = useStyles();\n    const navigation = useNavigation();\n\n    return (\n        <div className={classes.titleContainer}>\n            <Button className={classes.button} onClick={() => navigation.goBack()}>\n                <ArrowBack />\n            </Button>\n            <Typography variant=\"h4\">{title}</Typography>\n        </div>\n    );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React from 'react';\n\nimport ArrowBackTitle from '../../components/Title/ArrowBackTitle';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    CardsContainer: {\n        padding: '1em',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n}));\n\nexport default function TermDoc() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <ArrowBackTitle title=\"About Us\" />\n            <Divider />\n            <div className={classes.CardsContainer}>\n                <Card variant=\"outlined\">\n                    <CardHeader title=\"sunt aut facere repellat provident occaecati excepturi\" />\n                    <CardContent>\n                        <Typography>\n                            quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae\n                            ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n    );\n}\n"],"sourceRoot":""}